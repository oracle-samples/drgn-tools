vmtest:
  # Virtual machine tests run in parallel and take a fair bit of memory. Use
  # resource_group to limit the concurrency of these tests so only one runs at a
  # time.
  resource_group: VM
  script:
    - python -m venv venv --system-site-packages
    - venv/bin/pip install -r testing/requirements-heavyvm.txt
    - git archive HEAD -o archive.tar.gz
    - mkdir -p tmp/overlays tmp/info
    # Whenever changes to the VM images are made, the "generation number" should
    # be incremented. We keep around the current and the prior generation, so
    # that older branches will continue to test against the older generation of
    # VMs, rather than failing. Note that even the stable branch should update
    # to the latest generation of VMs promptly, and developers should rebase
    # their branches as soon as possible. This system just allows for a little
    # bit of slack in the process.
    - venv/bin/python -m testing.heavyvm.runner --image-dir /var/drgn-tools/images-gen01 --vm-info-dir tmp/info --overlay-dir tmp/overlays --tarball archive.tar.gz
  artifacts:
    when: always
    paths:
      - heavyvm.xml
    reports:
      junit: heavyvm.xml

vmcore DWARF:
  script:
    - python -m venv venv --system-site-packages
    - venv/bin/pip install -r testing/requirements-vmcore.txt
    - venv/bin/python -m testing.vmcore.test -j 4 --core-directory /var/drgn-tools/vmcores
  artifacts:
    when: always
    paths:
      - vmcore.xml
    reports:
      junit: vmcore.xml

vmcore CTF:
  script:
    - python -m venv venv --system-site-packages
    - venv/bin/pip install -r testing/requirements-vmcore.txt
    - venv/bin/python -m testing.vmcore.test -j 4 --ctf --core-directory /var/drgn-tools/vmcores
  artifacts:
    when: always
    paths:
      - vmcore.xml
    reports:
      junit: vmcore.xml
